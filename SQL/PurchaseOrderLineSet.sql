select t.*,
       Purchase_Order_API.Get_Adhoc_Purchased_Db(order_no) AdhocPurchasedDb,
       Rental_Object_API.Get_Planned_Rental_Start_Date(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PlannedRentalStartDate,
       Rental_Object_API.Get_Planned_Rental_Start_Time(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PlannedRentalStartTime,
       Rental_Object_API.Get_Planned_Rental_Duration(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PlannedRentalDuration,
       Rental_Object_API.Get_Rental_Duration_Unit_Meas(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) RentalDurationUom,
       Rental_Object_API.Get_Planned_Rental_End_Date(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PlannedRentalEndDate,
       Rental_Object_API.Get_Planned_Rental_End_Time(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PlannedRentalEndTime,
       Rental_Object_API.Get_Planned_Rental_Return_Date(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PlannedRentalReturnDate,
       Pur_Ord_Date_Calculation_API.Get_Latest_Possible_Order_Date(contract, part_no, vendor_no, Purchase_Order_API.Get_Addr_No(order_no), ship_via_code, ext_transport_calendar_id, planned_receipt_date, internal_control_time, route_id, date_entered) LatestOrderDate,
       Rental_Object_Manager_API.Calculate_Chargeable_Days(Rental_Object_API.Get_Planned_Rental_Start_Date(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')), Rental_Object_API.Get_Planned_Rental_End_Date(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')), Rental_Object_API.Get_Chargeable_Id(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')), Rental_Object_API.Get_Exception_Id(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')), Rental_Period_Rounding_API.Encode(Rental_Object_API.Get_Period_Rounding(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')))) ChargeableDays,
       Rental_Object_API.Get_Chargeable_Id(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) ChargeableDaysID,
       Rental_Object_API.Get_Exception_Id(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) DateExceptionID,
       Rental_Object_API.Get_Period_Rounding(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) PeriodRounding,
       Rental_Object_API.Get_Trans_Schedule_Id(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER')) ScheduleID,
       DECODE(Document_Text_Api.Note_Id_exist(note_id), 1, 'TRUE', 'FALSE') DocumentText,
       Purchase_Order_Line_API.Get_Total_In_Order_Curr(order_no,line_no,release_no) NetAmtCurr,
       Purchase_Order_Line_API.Get_Total_Incl_Tax_Curr(order_no,line_no,release_no) GrossAmtCurr,
       Purchase_Order_Line_API.Get_Line_Total(order_no,line_no,release_no) NetAmtBase,
       Purchase_Order_Line_Part_API.Get_Line_Total_Incl_Tax(order_no,line_no,release_no) GrossAmtBase,
       DECODE(Source_Tax_Item_API.Multiple_Tax_Items_Exist(Site_API.Get_Company(Purchase_Order_API.Get_Contract(order_no)), 'PURCHASE_ORDER_LINE', order_no, line_no, release_no, '*', '*'), 'TRUE', 'TRUE', 'FALSE') MultipleTaxLines,
       Purchase_Order_Invoice_API.Calc_Qty_Invoiced(order_no,line_no,release_no) InvoicedQty,
       Purchase_Order_Invoice_API.Calc_Invoiced_Unit_Price(order_no,line_no,release_no) InvoicedPriceInvCurr,
       Purchase_Order_Invoice_API.Calc_Mpi_Discount(order_no,line_no,release_no) InvoicedDiscount,
       Purchase_Order_Invoice_API.Calc_Ivc_Additional_Cost(order_no,line_no,release_no) InvoicedAddCostNetCurr,
       Purchase_Part_Supplier_API.Get_Orders_Price_Option_Db(purchase_site, part_no, vendor_no) SendOrderPrice,
       Purchase_Order_Line_API.Get_Freeze_Flag_Db(order_no, line_no,release_no) PriceFreeze,
       Purchase_Part_Supplier_API.Get_Calc_Rounded_Qty(contract, part_no, vendor_no, qty_to_inspect, 'ADD') QtyToInspect,
       DECODE(part_ownership_db, 'CUSTOMER OWNED', owning_customer_no, 'CONSIGNMENT', vendor_no, 'SUPPLIER LOANED', vendor_no, 'SUPPLIER RENTED', vendor_no) Owner,
       Inventory_Part_API.Get_Std_Name_Id(purchase_site, part_no) StdNameId,
       Purchase_Part_API.Get_Std_Name(purchase_site,part_no) StandardName,
       DECODE(Purchase_Order_Line_API.Is_Inventory_Part(order_no,line_no,release_no), 1, 'TRUE', 'FALSE') InventoryPart,
       DECODE(Inventory_Transaction_Hist_API.Check_Receipt_In_Place(order_no, line_no, release_no),'TRUE', 'TRUE', 'FALSE') ReceivedInPlace,
       Purchase_Requisition_API.Get_Receiver(requisition_no) RequisitionOrderedFor,
       SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('DISCOM', 'Requisitioner', requisitioner_code||'^'||'REQUISITIONER_NAME'), Person_Info_API.Get_Name(requisitioner_code)), 1, 200) RequisitionerName,
       DECODE(demand_code_db, 'WO', TO_NUMBER(demand_order_no)) WorkOrderNo,
       DECODE(demand_code_db, 'DOP', TO_NUMBER(demand_release)) DopOrderId,
       Rental_Object_API.Get_Primary_Rental_No(order_no, line_no, release_no, null, 'PUR ORDER') RentalNo,
       DECODE(demand_code_db, 'SO', Shop_Order_Operation_API.Get_Operation_Description(demand_order_no, demand_release, demand_sequence_no, demand_operation_no)) OperationDescription,
       DECODE(demand_code_db, 'SO',Shop_Ord_API.Get_Part_No(demand_order_no, demand_release, demand_sequence_no)) DemandingPartNo,
       DECODE(demand_code_db, 'SO',Inventory_Part_API.Get_Description(contract, Shop_Ord_API.Get_Part_No(demand_order_no, demand_release, demand_sequence_no))) DemandingPartDescription,
       DECODE(Purchase_Order_Milestone_API.Milestone_Exist(order_no,line_no,release_no),'TRUE','TRUE','FALSE') MilestoneStagePaymentExists,
       Project_API.Get_Program_Id(project_id) ProgramId,
       Project_Program_Global_API.Get_Description(Project_API.Get_Program_Id(project_id)) ProgramDescription,
       Activity_API.Get_Sub_Project_Id(activity_seq) SubProjectId,
       Activity_API.Get_Sub_Project_Description(activity_seq) SubProjectDescription,
       Purchase_Order_Line_API.Get_Due_At_Dock(order_no,line_no,release_no) DueAtDock,
       DECODE(Pre_Accounting_API.Distribution_Exist(pre_accounting_id),1, 'TRUE','FALSE') DistributedPrePosting,
       NVL(over_delivery_tolerance, Purchase_Part_API.Get_Over_Delivery_Tolerance('CONTRACT','PART_NO')) OverTolerance,
       Currency_Code_API.Get_Currency_Rounding(company, Company_Finance_API.Get_Currency_Code(company)) Basecurrround,
       Currency_Code_API.Get_Currency_Rounding(company,currency_code) Currround,
       Part_Gtin_API.Get_Default_Gtin_No(part_no) Gtin,
       Company_Invent_Info_API.Get_Uom_For_Weight(company) WeightUom,
       Company_Invent_Info_API.Get_Uom_For_Volume(company) VolumeUom,
       Rental_Trans_Schedule_API.Get_Description(Rental_Object_API.Get_Trans_Schedule_Id(Rental_Object_API.Get_Rental_No(order_no,line_no,release_no,null,'PUR ORDER'))) ScheduleDescription,
       Iso_Country_API.Get_Description(country_of_origin) CountryDescription,
       Country_Region_API.Get_Name_Via_Contract(contract,region_of_origin) RegionDescription,
       Quotation_Line_Order_API.Get_Po_Connected_Inquiry_No( order_no, line_no, release_no, vendor_no ) RequestNo,
       Quotation_Line_Order_API.Get_Po_Connected_Line_No( order_no, line_no, release_no, vendor_no ) RequestLineNo,
       Quotation_Line_Order_API.Get_Po_Connected_Revision_No( order_no, line_no, release_no, vendor_no ) RevisionNo,
       Manufacturer_Info_API.Get_Country(manufacturer_id) Country,
       Purchase_Order_API.Change_Order_Required(order_no, 'FALSE') ChangeOrderRequired,
       Pur_Approval_Rule_Util_API.Allow_Changes_After_Auth(order_no) AllowChangesAfterAuth,
       DECODE(Part_Catalog_API.Get_Rcpt_Issue_Serial_Track_Db(part_no), 'TRUE', 'TRUE', 'FALSE') SerialHandled,
       Exp_License_Connect_Head_API.Get_State_By_Ref(order_no,line_no,release_no,null,DECODE(order_code, '6', 'ESO_PURCHASE_ORDER', 'PURCHASE_ORDER')) ExportLicenseStatusForFindAndConnect,
       Supplier_Info_General_API.Get_Name(vendor_no) VendorName,
       Person_Info_API.Get_Name(buyer_code) BuyerName,
       SUBSTR(NVL(Enterp_Comp_Connect_V170_API.Get_Company_Translation(company, 'ACCRUL', 'StatutoryFee',fee_code), Statutory_Fee_API.Get_Description(company, fee_code)), 1, 100) FeeCodeDescription,
       Delivery_Control_Code_API.Get_Description(delivery_control_code) DeliveryControlCodeDescription,
       Condition_Code_API.Get_Description(condition_code) ConditionCodeDescription,
       Purchase_Part_Group_API.Get_Description(stat_grp) StatGrpDescription,
       Supplier_Assortment_API.Get_Description(assortment) SupplierAssortmentDescription,
       Order_Proc_Type_API.Get_Description(process_type) ProcessTypeDescription,
       Manufacturer_Info_API.Get_Name(manufacturer_id) ManufacturerName,
       Project_API.Get_Name(project_id) ProjectName,
       External_Service_Type_API.Get_Description(service_type) ServiceTypeDescription,
       Order_Cancel_Reason_API.Get_Reason_Description(cancel_reason) CancelReasonDescription,
       Packing_Instruction_API.Get_Description(packing_instruction_id) PackingInstructionDescription,
       Customs_Statistics_Number_API.Get_Description(customs_stat_no) CustomsStatDescription,
       Purch_Line_Revision_Status_API.Get_Purch_Revision_Status(order_no, line_no, release_no) PurchRevisionStatus,
       Part_Revision_API.Get_Revision_Text(contract, part_no, eng_chg_level) RevisionText,
       Part_Revision_API.Get_Eng_Revision(contract, part_no, eng_chg_level) EngRevision,
       Part_Revision_API.Get_Eng_Revision_Desc(contract, part_no, eng_chg_level) EngRevisionDesc,
       Part_Revision_API.Get_Technical_Drawing_No(contract, part_no, eng_chg_level) DrawingNo,
       Part_Revision_API.Get_Tech_Drawing_Revision_No(contract, part_no, eng_chg_level) DrawingRevisionNo,
       Part_Catalog_API.Get_Configurable_Db(part_no) Configurable,
       Purchase_Order_Line_Part_API.Get_Configuration_Id(order_no, line_no, release_no) ConfigurationId,
       Purchase_Order_Line_Part_API.Get_Alternative_Part_Revision(order_no, line_no, release_no) AlternativePartRevision,
       Purchase_Order_Line_Part_API.Get_Qty_Scrapped_Supplier(order_no, line_no, release_no) QtyScrappedSupplier,
       Customs_Statistics_Number_API.Get_Customs_Unit_Meas(customs_stat_no) CustomsUnitMeas,
       Activity_API.Get_Activity_No(activity_seq) ActivityNo,
       Activity_API.Get_Description(activity_seq) ActivityDescription,
       Customer_Info_API.Get_Name(owning_customer_no) CustomerName,
       Supplier_Info_API.Get_Name(INVOICING_SUPPLIER) SupplierName,
       Work_Time_Calendar_API.Get_Description(EXT_TRANSPORT_CALENDAR_ID) ExtTranspCalDescr,
       Purchase_Order_API.Get_Objstate(order_no) PoObjstate,
       Level_1_Part_By_Ms_Set_API.Get_Planning_Tf_Date(CONTRACT, PART_NO,NVL(PROJECT_ID, '*'), 1) PlanningTfDate,
       Level_1_Part_API.Get_Parent_Part_No(CONTRACT, PART_NO, NVL(PROJECT_ID, '*')) MsFamilyPart,
       Inventory_Part_API.Get_Planner_Buyer(contract, part_no) PlannerBuyer,
       to_char(planned_receipt_date, 'IYWW') Week,
       Inventory_Part_API.Get_Second_Commodity(Contract, Part_No) CommodityGroup2,
       DECODE(Connected_Phrase_API.Check_Phrase_Exists('PURCHASE_ORDER_LINE', order_no, line_no, release_no, '*', '*'), 1,'TRUE','FALSE') ContractClausesExist,
       External_Service_Price_API.Get_External_Service_Lead_Time(contract, part_no, vendor_no, service_type) ExternalServiceLeadTime,
       Purchase_Order_Line_Util_API.Get_Material_Line_Delivery_Db(order_no, line_no, release_no) DeliveryMethod,
       Assortment_Node_API.Get_Description(category_assortment, category_assortment_node) CategoryAssortmentNodeDesc,
       Income_Type_API.Get_Income_Type_Id(internal_income_type) IncomeTypeId,
       CASE WHEN planned_arrival_date < Site_API.Get_Site_Date(contract) THEN 'TRUE' ELSE 'FALSE' END LatePoLine,
       Income_Type_API.Get_Income_Type_Id(internal_income_type) IncomeTypeId 
from purchase_order_line_all t
where to_date(substr(t.OBJVERSION, 0, 8), 'YYYYMMDD') between to_date('20181101', 'YYYYMMDD') AND  to_date('20240331', 'YYYYMMDD');
