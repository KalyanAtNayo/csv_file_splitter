SELECT t.*,
       decode(planning_method_auto_db, 'TRUE', 'TRUE', 'FALSE') planning_method_auto_db,
       Inventory_Part_Planning_API.Get_Inventory_Interest_Rate(contract,
                                                               part_no) inv_interest_operative_value,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Planning_API.Get_Inv_Interest_Rate_Source(contract,
                                                                                                     part_no)) inv_interest_source,
       Inventory_Part_Planning_API.Get_Service_Level_Rate(contract, part_no) service_rate_operative_value,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Planning_API.Get_Service_Level_Rate_Source(contract,
                                                                                                      part_no)) service_rate_source,
       Inventory_Part_Planning_API.Get_Ordering_Cost(contract, part_no) ordering_cost_operative_value,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Planning_API.Get_Ordering_Cost_Source(contract,
                                                                                                 part_no)) ordering_cost_source,
       Inventory_Part_Planning_API.Get_Percent_Diff(old_safety_stock,
                                                    safety_stock) safety_stock_change,
       DECODE(safety_stock_auto_db, 'Y', 'TRUE', 'FALSE') safety_stock_auto_db,
       Inventory_Part_Planning_API.Get_Percent_Diff(old_order_point_qty,
                                                    order_point_qty) order_point_change,
       DECODE(order_point_qty_auto_db, 'Y', 'TRUE', 'FALSE') order_point_qty_auto_db,
       Inventory_Part_Planning_API.Get_Percent_Diff(old_lot_size, lot_size) lot_size_change,
       DECODE(lot_size_auto_db, 'Y', 'TRUE', 'FALSE') lot_size_auto_db,
       Inventory_Part_Invpla_Info_API.Get_Demand_Model_Db(contract, part_no) demand_model,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Demand_Model_Source(contract,
                                                                                                   part_no)) demand_model_source,
       Inventory_Part_Invpla_Info_API.Get_Safety_Stock_Model_Db(contract,
                                                                part_no) safety_stock_model,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Safety_Stock_Model_Source(contract,
                                                                                                         part_no)) safety_stock_model_source,
       Inventory_Part_Invpla_Info_API.Get_Lot_Size_Model_Db(contract,
                                                            part_no) lot_size_model,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Lot_Size_Model_Source(contract,
                                                                                                     part_no)) lot_size_model_source,
       Inventory_Part_Invpla_Info_API.Get_Order_Point_Model_Db(contract,
                                                               part_no) order_point_model,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Order_Point_Model_Source(contract,
                                                                                                        part_no)) order_point_model_source,
       Inventory_Part_Invpla_Info_API.Get_Lot_Size_Cover_Time(contract,
                                                              part_no) lot_size_cover_time,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Lot_Size_Cover_Time_Source(contract,
                                                                                                          part_no)) lot_size_cover_time_source,
       Inventory_Part_Invpla_Info_API.Get_Safety_Stock_Cover_Time(contract,
                                                                  part_no) safety_stock_cover_time,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Safe_Stock_Cov_Time_Source(contract,
                                                                                                          part_no)) safety_stock_cover_time_source,
       Inventory_Part_Invpla_Info_API.Get_Max_Order_Cover_Time(contract,
                                                               part_no) max_order_cover_time,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Max_Order_Covr_Time_Source(contract,
                                                                                                          part_no)) max_order_cover_time_source,
       Inventory_Part_Invpla_Info_API.Get_Max_Safety_Stk_Cover_Time(contract,
                                                                    part_no) max_safety_stock_cover_time,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Max_Safety_Stk_Covr_Source(contract,
                                                                                                          part_no)) max_safety_stock_cover_time_source,
       Inventory_Part_Invpla_Info_API.Get_Lead_Time_Factor(contract,
                                                           part_no) lead_time_factor,
       Planning_Hierarchy_Source_API.Encode(Inventory_Part_Invpla_Info_API.Get_Lead_Time_Factor_Source(contract,
                                                                                                       part_no)) lead_time_factor_source,
       Asset_Class_API.Get_Seasonal_Demand_Pattern_Db(Inventory_Part_API.Get_Asset_Class(contract,
                                                                                         part_no)) seasonal_demand_pattern,
       Inventory_Part_Invpla_Info_API.Get_Estimated_Yearly_Demand(contract,
                                                                  part_no) estimated_yearly_demand,
       Inventory_Part_API.Get_Planner_Buyer(contract, part_no) planner
  FROM INVENTORY_PART_PLANNING t
 WHERE to_date(substr(t.OBJVERSION, 0, 8), 'YYYYMMDD') between
       to_date('20181101', 'YYYYMMDD') AND to_date('20240331', 'YYYYMMDD');
